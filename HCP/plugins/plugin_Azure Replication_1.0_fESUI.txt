{
  "referenceId": "fESUI",
  "version": "1.0",
  "name": "Azure Replication",
  "license": "EULA",
  "description": null,
  "baseScript": "#$Host_User = 'demo20\\mathurp'\n\n#$Host_Pass = ''\n\nwinrm s winrm/config/client '@{TrustedHosts=\"*\"}'\nEnable-PSRemoting -Force\n$hostname = (get-item \"HKLM:\\SOFTWARE\\Microsoft\\Virtual Machine\\Guest\\Parameters\").GetValue(\"HostName\")\n$secpasswd = ConvertTo-SecureString '$Host_Pass' -AsPlainText -Force\n$mycreds = New-Object System.Management.Automation.PSCredential ('$Host_User', $secpasswd)\nInvoke-Command -ComputerName $hostname -ScriptBlock {\n'C:\\Program Files (x86)\\Microsoft SDKs\\Azure\\PowerShell\\ServiceManagement\\Azure\\Azure.psd1'\n$prog = ((Get-WmiObject -Class win32_product).name)\n\nforeach ($program in $prog){\n$sel = ( $program -match 'Microsoft Azure Powershell *')\n#$sel\nif ($sel -match 'True')\n{\n Write-host \"The $program already installed\"\n Break}\n else\n {\n #Install Azure Powershell\n Invoke-WebRequest https://www.microsoft.com/web/handlers/webpi.ashx/getinstaller/WindowsAzurePowershellGet.3f.3f.3fnew.appids -OutFile 'c:\\windows\\azure_powershell.exe'\n Start-Process -FilePath 'c:\\windows\\azure_powershell.exe' -ArgumentList '-i silent'\n }\n \n}\n\n$prog = ((Get-WmiObject -Class win32_product).name)\nforeach ($program in $prog){\n$program\n$sel = ( $program -match 'Microsoft Azure Site Recovery Provider')\n#$sel\nif ($sel -match 'True')\n{\n $sel\n Write-Host \"Provider Installed\"\n Break} \n else\n {\n #Install Azure Site Recovery provider\n #Invoke-WebRequest http://download.microsoft.com/download/4/D/3/4D328146-37A1-4EC8-A6A6-82FEE95A989A/AzureSiteRecoveryProvider.exe -OutFile 'c:\\test\\azure_provider.exe'\n #Start-Process -FilePath 'c:\\test\\azure_provider.exe' -ArgumentList '/x:\"c:\\test\" /q' -Wait\n #Start-Process -FilePath 'c:\\test\\setupdr.exe' -ArgumentList '/i' -Wait\n }}\n #Install Azure Site Recovery provider\n if ($sel -match 'False'){Invoke-WebRequest http://download.microsoft.com/download/4/D/3/4D328146-37A1-4EC8-A6A6-82FEE95A989A/AzureSiteRecoveryProvider.exe -OutFile 'c:\\test\\azure_provider.exe'\n Start-Process -FilePath 'c:\\test\\azure_provider.exe' -ArgumentList '/x:\"c:\\test\" /q' -Wait\n Start-Process -FilePath 'c:\\test\\setupdr.exe' -ArgumentList '/i' -Wait}\n } -Credential $mycreds\nInvoke-Command -ComputerName $hostname -ScriptBlock {\n$p = [Environment]::GetEnvironmentVariable(\"PSModulePath\")\n$p += \";C:\\Program Files (x86)\\Microsoft SDKs\\Azure\"\n[Environment]::SetEnvironmentVariable(\"PSModulePath\",$p)\n$p = [Environment]::GetEnvironmentVariable(\"PSModulePath\")\n$p\n#$Policy_Name = 'power_replica_srv2016-pun'\n#$RM_Group_Name = 'Puneet-Final'\n#$VM_name = 'srv2016-pun'\n#$Host_User = 'demo20\\mathurp'\n#$Site = 'Puneet-Final-Azure'\n#$Azure_Pass = 'Hypergrid123'\n#$Vault_Name = 'Puneet-Final-Vault'\n#$storage_account = 'puneetfinal'\n#$Host_Pass = 'Vijay108'\n#$Azure_User = 'pmathur@hypergrid.com'\n$secpass = ConvertTo-SecureString '$Azure_Pass' -AsPlainText -Force\n$Azure_mycred = New-Object System.Management.Automation.PSCredential ('$Azure_User', $secpass)\nLogin-AzureRmAccount -Credential $Azure_mycred\nSelect-AzureRmSubscription -SubscriptionId b8a53878-f47e-449f-a48c-ed6fd18ab359\nGet-AzureRmResourceProvider -ProviderNamespace Microsoft.RecoveryServices\nGet-AzureRmResourceProvider -ProviderNamespace Microsoft.SiteRecovery\nif ((Get-AzureRmResourceGroup -name '$RM_Group_Name' -ErrorAction SilentlyContinue) -eq $null)\n{\nNew-AzureRmResourceGroup -Name '$RM_Group_Name' -Location 'West US'\n\n}\nelse {\nGet-AzureRmResourceGroup -name '$RM_Group_Name'\n}\nif ((Get-AzureRmRecoveryServicesVault -name '$Vault_Name' -ErrorAction SilentlyContinue) -eq $null)\n{\n New-AzureRmRecoveryServicesVault -Name '$Vault_Name' -ResourceGroupName '$RM_Group_Name' -Location 'West US'\n$vault = Get-AzureRmRecoveryServicesVault -name '$Vault_Name'\n    }\n    else {\n   \n    $vault = Get-AzureRmRecoveryServicesVault -name '$Vault_Name'\n}\nSet-AzureRmSiteRecoveryVaultSettings -ARSVault $vault\nWrite-Host \"Here is the Vault\"\n$vault = Get-AzureRmSiteRecoveryVault -Name '$Vault_Name'\n\n\nif ((Get-AzureRmSiteRecoverySite -Name '$Hyper-V_Site' -ErrorAction SilentlyContinue) -eq $null)\n{\n   New-AzureRmSiteRecoverySite -Name '$Hyper-V_Site'\n   for ($flag -eq $null){\n\n$Site_Azure = Get-AzureRmSiteRecoverySite -Name '$Hyper-V_Site' -ErrorAction SilentlyContinue\nif ($Site_Azure -ne $null) {\nBreak}\n}\n   \n    }\n    else\n    {\n    Get-AzureRmSiteRecoverySite -Name '$Hyper-V_Site'\n    }\n\nif ((Get-AzureRmStorageAccount -Name '$storage_account' -ResourceGroupName '$RM_Group_Name' -erroraction SilentlyContinue ) -ne $null)\n{\n   Get-AzureRmStorageAccount -Name '$storage_account' -ResourceGroupName '$RM_Group_Name'\n    }\n    else\n    {\n    New-AzureRmStorageAccount -Name '$storage_account' -ResourceGroupName '$RM_Group_Name' -SkuName Standard_LRS -Location 'West US' -ErrorAction 'Stop'\n    }\n$cred = Get-AzureRmRecoveryServicesVaultSettingsFile -Vault (Get-AzureRmRecoveryServicesVault -name '$Vault_Name') -SiteFriendlyName '$Hyper-V_Site' -SiteIdentifier ((Get-AzureRmSiteRecoverySite -Name '$Hyper-V_Site') | select -ExpandProperty SiteIdentifier) -Path 'C:\\test'\n$file = $cred.FilePath\nTest-Path -Path $file\n$argus = '/r /Credentials '+ $file + ' /Friendlyname ' + $env:COMPUTERNAME + ' /Encryptionenabled ' + 'c:\\test\\test.pfx'\n$argus\nStart-Process 'C:\\Program Files\\Microsoft Azure Site Recovery Provider\\DRConfigurator.exe' -argumentlist $argus -WorkingDirectory \"C:\\Program Files\\Microsoft Azure Site Recovery Provider\" -PassThru -Wait -Verb runAs\n\nGet-AzureRmSiteRecoveryServer\n$flag = $null\n$PolicyResult = New-AzureRmSiteRecoveryPolicy -Name '$Policy_Name' -ReplicationProvider HyperVReplicaAzure -ReplicationFrequencyInSeconds 900 -ApplicationConsistentSnapshotFrequencyInHours '1' -RecoveryPoints '1' -RecoveryAzureStorageAccountId ((Get-AzureRmStorageAccount -Name '$storage_account' -ResourceGroupName '$RM_Group_Name').Id)\nfor ($flag -eq $null){\n\n$Policy = Get-AzureRmSiteRecoveryPolicy -Name '$Policy_Name' -ErrorAction SilentlyContinue\nif ($Policy -ne $null) {\n$Policy\nBreak}\n}\nfor ($flag -eq $null){\nWrite-Host \"Checkig Protection Container\"\nSleep 60\nif ((Get-AzureRmSiteRecoveryProtectionContainer) -ne $null){\n\nBreak}}\n\n$associationJob = Start-AzureRmSiteRecoveryPolicyAssociationJob -Policy $Policy -PrimaryProtectionContainer (Get-AzureRmSiteRecoveryProtectionContainer)\nfor ($flag -eq $null){\nif ((Get-AzureRmSiteRecoveryProtectionContainer) -ne $null){\nBreak}}\n\nfor ($flag -eq $null){\nif (((Get-AzureRmSiteRecoveryProtectionContainer -FriendlyName '$Hyper-V_Site' -ErrorAction SilentlyContinue).AvailablePolicies) -ne $null){\nBreak}}\nfor ($flag -eq $null){\n\n$protectionEntity = Get-AzureRmSiteRecoveryProtectionEntity -ProtectionContainer (Get-AzureRmSiteRecoveryProtectionContainer -FriendlyName '$Hyper-V_Site') -FriendlyName '$VM_name'\n$DRjob = Set-AzureRmSiteRecoveryProtectionEntity -ProtectionEntity $protectionEntity -Policy $Policy -Protection Enable -RecoveryAzureStorageAccountId ((Get-AzureRmStorageAccount -Name '$storage_account' -ResourceGroupName '$RM_Group_Name').Id)  -OS 'Windows' -OSDiskName $protectionEntity.Disks[0].Name -ErrorAction SilentlyContinue\nif ($DRjob -ne $null)\n{\n$DRjob\n$DRjob.State\nbreak}}\n\n} -Credential $mycreds",
  "envs": [],
  "scriptArgs": null,
  "scriptLang": "POWERSHELL",
  "timeout": 30
}